"use strict";

app.controller("wizard", ["memory", "$scope", "$q", function (memory, $scope, $q) {
	
	var deferred = $q.defer();
	$scope.wizard_step = 0;
	$scope.upgraded = false;
	$scope.upgraded_from = 0;
	
	deferred.promise.then(undefined, undefined, function (data){
		if ($scope.wizard_step == 1)
		{
			if (memory.is_old_version())
			{
				$scope.upgraded_from = memory.build_number;
				$scope.wizard_step = 2;
				memory.upgrade();
			}
			else
			{
				$scope.wizard_step = -1;
			}
			return;
		}
		
		if ($scope.wizard_step == 2)
		{
			$scope.upgraded = true;
			$scope.wizard_step = 3;
			
			return;
		}

		if ($scope.wizard_step == 3)
		{
			$scope.wizard_step = 4;
			
			return;
		}		
		
		if ($scope.wizard_step == 4)
		{
			$scope.wizard_step = 0;
			$scope.upgraded = false;
			$scope.upgraded_from = 0;
			
			return;
		}
	});	
	
	memory.getAllValues(deferred);
	
	$scope.$on('$destroy', function() {
		memory.remove_notify(deferred);
	});	
	
	$scope.load = function(){
		$scope.wizard_step = 1;
		$scope.file_selector.click();
	};
	    
    $scope.read_file = function(files){
    	console.log(files[0]);
    	var file = files[0];
    	
    	if (files.length != 1 || (file.name.slice(-3) != ".EE"))
    	{
    		alert("Please select CFG.EE or OLD.EE file from SkyDrop root directory");
    		$scope.file_selector.val(null);
    		return;
    	}
    	
    	var reader = new FileReader();
    	reader.onload = function(e) 
    	{
    	    var contents = e.target.result;
    	    memory.load_data(contents);
    	    $scope.file_selector.val(null);
    	};
    	  
    	reader.readAsArrayBuffer(file);
    };
    
    $scope.newest = function()
    {
    	return memory.newest_build;  	
    };      
    
    $scope.get_pack = function()
    {
    	var promise = memory.get_fw_pack();
    	promise.then(function(pack){
            var blob = new Blob([pack], {type: "application/octet-stream"});
            
            alert("Save this file as DROP2.FW on SkyDrop root directory.\n\nWARNING!\nFiles generated by browser like DROP2 (2).FW, DROP2 (3).FW, ... DROP2 (12).FW will not be accepted by SkyDrop!");
            saveAs(blob, "DROP2.FW");
    	});
    };
    
    $scope.save = function(){
        var blob = new Blob([memory.getBlob()], {type: "application/octet-stream"});
        
        alert("Save this file as DROP2.EE on SkyDrop root directory.\n\nWARNING!\nFiles generated by browser like DROP2 (2).EE, DROP2 (3).EE, ... DROP2 (12).EE will not be accepted by SkyDrop!");
        saveAs(blob, "DROP2.EE");
    };    
    
    $scope.file_selector = angular.element("#file-selector-wizard");
}]);
